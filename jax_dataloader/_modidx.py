# Autogenerated by nbdev

d = { 'settings': { 'branch': 'master',
                'doc_baseurl': '/jax-dataloader',
                'doc_host': 'https://birkhoffg.github.io',
                'git_url': 'https://github.com/birkhoffg/jax-dataloader',
                'lib_path': 'jax_dataloader'},
  'syms': { 'jax_dataloader.core': { 'jax_dataloader.core.DataLoader': ('core.html#dataloader', 'jax_dataloader/core.py'),
                                     'jax_dataloader.core.DataLoader.__init__': ('core.html#dataloader.__init__', 'jax_dataloader/core.py'),
                                     'jax_dataloader.core.DataLoader.__iter__': ('core.html#dataloader.__iter__', 'jax_dataloader/core.py'),
                                     'jax_dataloader.core.DataLoader.__len__': ('core.html#dataloader.__len__', 'jax_dataloader/core.py'),
                                     'jax_dataloader.core.DataLoader.__next__': ('core.html#dataloader.__next__', 'jax_dataloader/core.py'),
                                     'jax_dataloader.core.DataloaderBackends': ('core.html#dataloaderbackends', 'jax_dataloader/core.py'),
                                     'jax_dataloader.core.DataloaderBackends.__getitem__': ( 'core.html#dataloaderbackends.__getitem__',
                                                                                             'jax_dataloader/core.py'),
                                     'jax_dataloader.core.DataloaderBackends.supported': ( 'core.html#dataloaderbackends.supported',
                                                                                           'jax_dataloader/core.py'),
                                     'jax_dataloader.core._check_backend_compatibility': ( 'core.html#_check_backend_compatibility',
                                                                                           'jax_dataloader/core.py'),
                                     'jax_dataloader.core._dispatch_dataloader': ( 'core.html#_dispatch_dataloader',
                                                                                   'jax_dataloader/core.py'),
                                     'jax_dataloader.core._get_backends': ('core.html#_get_backends', 'jax_dataloader/core.py'),
                                     'jax_dataloader.core.get_backend_compatibilities': ( 'core.html#get_backend_compatibilities',
                                                                                          'jax_dataloader/core.py')},
            'jax_dataloader.datasets': { 'jax_dataloader.datasets.ArrayDataset': ( 'dataset.html#arraydataset',
                                                                                   'jax_dataloader/datasets.py'),
                                         'jax_dataloader.datasets.ArrayDataset.__getitem__': ( 'dataset.html#arraydataset.__getitem__',
                                                                                               'jax_dataloader/datasets.py'),
                                         'jax_dataloader.datasets.ArrayDataset.__init__': ( 'dataset.html#arraydataset.__init__',
                                                                                            'jax_dataloader/datasets.py'),
                                         'jax_dataloader.datasets.ArrayDataset.__len__': ( 'dataset.html#arraydataset.__len__',
                                                                                           'jax_dataloader/datasets.py'),
                                         'jax_dataloader.datasets.ArrayDataset.asnumpy': ( 'dataset.html#arraydataset.asnumpy',
                                                                                           'jax_dataloader/datasets.py'),
                                         'jax_dataloader.datasets.Dataset': ('dataset.html#dataset', 'jax_dataloader/datasets.py'),
                                         'jax_dataloader.datasets.Dataset.__getitem__': ( 'dataset.html#dataset.__getitem__',
                                                                                          'jax_dataloader/datasets.py'),
                                         'jax_dataloader.datasets.Dataset.__len__': ( 'dataset.html#dataset.__len__',
                                                                                      'jax_dataloader/datasets.py')},
            'jax_dataloader.experimental.multi_processing': { 'jax_dataloader.experimental.multi_processing.EpochIterator': ( 'experimental/mp.html#epochiterator',
                                                                                                                              'jax_dataloader/experimental/multi_processing.py'),
                                                              'jax_dataloader.experimental.multi_processing.EpochIterator.__del__': ( 'experimental/mp.html#epochiterator.__del__',
                                                                                                                                      'jax_dataloader/experimental/multi_processing.py'),
                                                              'jax_dataloader.experimental.multi_processing.EpochIterator.__init__': ( 'experimental/mp.html#epochiterator.__init__',
                                                                                                                                       'jax_dataloader/experimental/multi_processing.py'),
                                                              'jax_dataloader.experimental.multi_processing.EpochIterator.__iter__': ( 'experimental/mp.html#epochiterator.__iter__',
                                                                                                                                       'jax_dataloader/experimental/multi_processing.py'),
                                                              'jax_dataloader.experimental.multi_processing.EpochIterator.__next__': ( 'experimental/mp.html#epochiterator.__next__',
                                                                                                                                       'jax_dataloader/experimental/multi_processing.py'),
                                                              'jax_dataloader.experimental.multi_processing.EpochIterator.close': ( 'experimental/mp.html#epochiterator.close',
                                                                                                                                    'jax_dataloader/experimental/multi_processing.py'),
                                                              'jax_dataloader.experimental.multi_processing.EpochIterator.get_data': ( 'experimental/mp.html#epochiterator.get_data',
                                                                                                                                       'jax_dataloader/experimental/multi_processing.py'),
                                                              'jax_dataloader.experimental.multi_processing.EpochIterator.run': ( 'experimental/mp.html#epochiterator.run',
                                                                                                                                  'jax_dataloader/experimental/multi_processing.py'),
                                                              'jax_dataloader.experimental.multi_processing.chunk': ( 'experimental/mp.html#chunk',
                                                                                                                      'jax_dataloader/experimental/multi_processing.py')},
            'jax_dataloader.imports': {},
            'jax_dataloader.loaders.base': { 'jax_dataloader.loaders.base.BaseDataLoader': ( 'loader.base.html#basedataloader',
                                                                                             'jax_dataloader/loaders/base.py'),
                                             'jax_dataloader.loaders.base.BaseDataLoader.__init__': ( 'loader.base.html#basedataloader.__init__',
                                                                                                      'jax_dataloader/loaders/base.py'),
                                             'jax_dataloader.loaders.base.BaseDataLoader.__iter__': ( 'loader.base.html#basedataloader.__iter__',
                                                                                                      'jax_dataloader/loaders/base.py'),
                                             'jax_dataloader.loaders.base.BaseDataLoader.__len__': ( 'loader.base.html#basedataloader.__len__',
                                                                                                     'jax_dataloader/loaders/base.py'),
                                             'jax_dataloader.loaders.base.BaseDataLoader.__next__': ( 'loader.base.html#basedataloader.__next__',
                                                                                                      'jax_dataloader/loaders/base.py')},
            'jax_dataloader.loaders.jax': { 'jax_dataloader.loaders.jax.DataLoaderJAX': ( 'loader.jax.html#dataloaderjax',
                                                                                          'jax_dataloader/loaders/jax.py'),
                                            'jax_dataloader.loaders.jax.DataLoaderJAX.__init__': ( 'loader.jax.html#dataloaderjax.__init__',
                                                                                                   'jax_dataloader/loaders/jax.py'),
                                            'jax_dataloader.loaders.jax.DataLoaderJAX.__iter__': ( 'loader.jax.html#dataloaderjax.__iter__',
                                                                                                   'jax_dataloader/loaders/jax.py'),
                                            'jax_dataloader.loaders.jax.DataLoaderJAX.__len__': ( 'loader.jax.html#dataloaderjax.__len__',
                                                                                                  'jax_dataloader/loaders/jax.py'),
                                            'jax_dataloader.loaders.jax.DataLoaderJAX.next_key': ( 'loader.jax.html#dataloaderjax.next_key',
                                                                                                   'jax_dataloader/loaders/jax.py'),
                                            'jax_dataloader.loaders.jax.EpochIterator': ( 'loader.jax.html#epochiterator',
                                                                                          'jax_dataloader/loaders/jax.py'),
                                            'jax_dataloader.loaders.jax.to_jax_dataset': ( 'loader.jax.html#to_jax_dataset',
                                                                                           'jax_dataloader/loaders/jax.py')},
            'jax_dataloader.loaders.tensorflow': { 'jax_dataloader.loaders.tensorflow.DataLoaderTensorflow': ( 'loader.tf.html#dataloadertensorflow',
                                                                                                               'jax_dataloader/loaders/tensorflow.py'),
                                                   'jax_dataloader.loaders.tensorflow.DataLoaderTensorflow.__init__': ( 'loader.tf.html#dataloadertensorflow.__init__',
                                                                                                                        'jax_dataloader/loaders/tensorflow.py'),
                                                   'jax_dataloader.loaders.tensorflow.DataLoaderTensorflow.__iter__': ( 'loader.tf.html#dataloadertensorflow.__iter__',
                                                                                                                        'jax_dataloader/loaders/tensorflow.py'),
                                                   'jax_dataloader.loaders.tensorflow.DataLoaderTensorflow.__len__': ( 'loader.tf.html#dataloadertensorflow.__len__',
                                                                                                                       'jax_dataloader/loaders/tensorflow.py'),
                                                   'jax_dataloader.loaders.tensorflow.DataLoaderTensorflow.__next__': ( 'loader.tf.html#dataloadertensorflow.__next__',
                                                                                                                        'jax_dataloader/loaders/tensorflow.py'),
                                                   'jax_dataloader.loaders.tensorflow.to_tf_dataset': ( 'loader.tf.html#to_tf_dataset',
                                                                                                        'jax_dataloader/loaders/tensorflow.py')},
            'jax_dataloader.loaders.torch': { 'jax_dataloader.loaders.torch.DataLoaderPytorch': ( 'loader.torch.html#dataloaderpytorch',
                                                                                                  'jax_dataloader/loaders/torch.py'),
                                              'jax_dataloader.loaders.torch.DataLoaderPytorch.__init__': ( 'loader.torch.html#dataloaderpytorch.__init__',
                                                                                                           'jax_dataloader/loaders/torch.py'),
                                              'jax_dataloader.loaders.torch.DataLoaderPytorch.__iter__': ( 'loader.torch.html#dataloaderpytorch.__iter__',
                                                                                                           'jax_dataloader/loaders/torch.py'),
                                              'jax_dataloader.loaders.torch.DataLoaderPytorch.__len__': ( 'loader.torch.html#dataloaderpytorch.__len__',
                                                                                                          'jax_dataloader/loaders/torch.py'),
                                              'jax_dataloader.loaders.torch.DataLoaderPytorch.__next__': ( 'loader.torch.html#dataloaderpytorch.__next__',
                                                                                                           'jax_dataloader/loaders/torch.py'),
                                              'jax_dataloader.loaders.torch._numpy_collate': ( 'loader.torch.html#_numpy_collate',
                                                                                               'jax_dataloader/loaders/torch.py'),
                                              'jax_dataloader.loaders.torch.to_torch_dataset': ( 'loader.torch.html#to_torch_dataset',
                                                                                                 'jax_dataloader/loaders/torch.py')},
            'jax_dataloader.tests': { 'jax_dataloader.tests.get_batch': ('tests.html#get_batch', 'jax_dataloader/tests.py'),
                                      'jax_dataloader.tests.test_dataloader': ('tests.html#test_dataloader', 'jax_dataloader/tests.py'),
                                      'jax_dataloader.tests.test_no_shuffle': ('tests.html#test_no_shuffle', 'jax_dataloader/tests.py'),
                                      'jax_dataloader.tests.test_no_shuffle_drop_last': ( 'tests.html#test_no_shuffle_drop_last',
                                                                                          'jax_dataloader/tests.py'),
                                      'jax_dataloader.tests.test_shuffle': ('tests.html#test_shuffle', 'jax_dataloader/tests.py'),
                                      'jax_dataloader.tests.test_shuffle_drop_last': ( 'tests.html#test_shuffle_drop_last',
                                                                                       'jax_dataloader/tests.py')},
            'jax_dataloader.utils': { 'jax_dataloader.utils.Config': ('utils.html#config', 'jax_dataloader/utils.py'),
                                      'jax_dataloader.utils.Config.default': ('utils.html#config.default', 'jax_dataloader/utils.py'),
                                      'jax_dataloader.utils.asnumpy': ('utils.html#asnumpy', 'jax_dataloader/utils.py'),
                                      'jax_dataloader.utils.check_hf_installed': ( 'utils.html#check_hf_installed',
                                                                                   'jax_dataloader/utils.py'),
                                      'jax_dataloader.utils.check_pytorch_installed': ( 'utils.html#check_pytorch_installed',
                                                                                        'jax_dataloader/utils.py'),
                                      'jax_dataloader.utils.check_tf_installed': ( 'utils.html#check_tf_installed',
                                                                                   'jax_dataloader/utils.py'),
                                      'jax_dataloader.utils.get_config': ('utils.html#get_config', 'jax_dataloader/utils.py'),
                                      'jax_dataloader.utils.has_pytorch_tensor': ( 'utils.html#has_pytorch_tensor',
                                                                                   'jax_dataloader/utils.py')}}}
